{"version":3,"sources":["../src/StoryPanel.tsx"],"names":["StyledStoryLink","Link","theme","display","textDecoration","borderRadius","appBorderRadius","color","background","hoverable","SelectedStoryHighlight","styled","div","StyledSyntaxHighlighter","SyntaxHighlighter","fontSize","typography","size","s2","areLocationsEqual","a","b","startLoc","line","col","endLoc","StoryPanel","api","setSource","React","useState","source","locationsMap","state","setState","story","getCurrentStoryData","selectedStoryRef","useRef","useEffect","parameters","storySource","currentLocation","Object","keys","find","key","sourceLoaderId","split","id","endsWith","length","undefined","current","scrollIntoView","createPart","rows","stylesheet","useInlineStyles","map","node","i","createStoryPart","location","refId","first","last","storyRows","slice","storyKey","createParts","parts","lastRow","forEach","kind","sourceIdParts","storyId","start","storyPart","push","lastPart","lineRenderer","myrows","properties","rest","className"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { API } from \"@storybook/api\";\nimport { styled } from \"@storybook/theming\";\nimport { Link } from \"@storybook/router\";\nimport {\n    SyntaxHighlighter,\n    SyntaxHighlighterProps,\n    SyntaxHighlighterRendererProps,\n    createSyntaxHighlighterElement\n} from \"@storybook/components\";\n\nimport { SourceBlock, LocationsMap } from \"@storybook/source-loader\";\nimport { Story } from \"@storybook/api/dist/lib/stories\";\n\nconst StyledStoryLink = styled(Link)<{ to: string; key: string }>(\n    ({ theme }) => ({\n        display: \"block\",\n        textDecoration: \"none\",\n        borderRadius: theme.appBorderRadius,\n        color: \"inherit\",\n\n        \"&:hover\": {\n            background: theme.background.hoverable\n        }\n    })\n);\n\nconst SelectedStoryHighlight = styled.div(({ theme }) => ({\n    background: theme.background.hoverable,\n    borderRadius: theme.appBorderRadius\n}));\n\nconst StyledSyntaxHighlighter = styled(SyntaxHighlighter)<\n    SyntaxHighlighterProps\n>(({ theme }) => ({\n    fontSize: theme.typography.size.s2 - 1\n}));\n\nconst areLocationsEqual = (a: SourceBlock, b: SourceBlock): boolean =>\n    a.startLoc.line === b.startLoc.line &&\n    a.startLoc.col === b.startLoc.col &&\n    a.endLoc.line === b.endLoc.line &&\n    a.endLoc.col === b.endLoc.col;\n\ninterface StoryPanelProps {\n    api: API;\n    setSource: () => string;\n}\n\ninterface SourceParams {\n    source: string;\n    locationsMap: LocationsMap;\n}\nexport const StoryPanel: React.FC<StoryPanelProps> = ({ api, setSource }) => {\n    const [state, setState] = React.useState<\n        SourceParams & { currentLocation?: SourceBlock }\n    >({\n        source: \"loading source...\",\n        locationsMap: {}\n    });\n\n    const story: Story | undefined = api.getCurrentStoryData() as Story;\n    const selectedStoryRef = React.useRef<HTMLDivElement>(null);\n    React.useEffect(() => {\n        if (story) {\n            const {\n                parameters: {\n                    // @ts-ignore\n                    storySource: { source, locationsMap } = {\n                        source: \"\",\n                        locationsMap: {}\n                    }\n                } = {}\n            } = story;\n            const currentLocation = locationsMap\n                ? locationsMap[\n                      Object.keys(locationsMap).find((key: string) => {\n                          const sourceLoaderId = key.split(\"--\");\n                          return story.id.endsWith(\n                              sourceLoaderId[sourceLoaderId.length - 1]\n                          );\n                      })\n                  ]\n                : undefined;\n            setState({ source, locationsMap, currentLocation });\n        }\n    }, [story ? story.id : null]);\n    React.useEffect(() => {\n        if (selectedStoryRef.current) {\n            selectedStoryRef.current.scrollIntoView();\n        }\n    }, [selectedStoryRef.current]);\n\n    const { source, locationsMap, currentLocation } = state;\n\n    const createPart = ({\n        rows,\n        stylesheet,\n        useInlineStyles\n    }: SyntaxHighlighterRendererProps) =>\n        rows.map((node, i) =>\n            createSyntaxHighlighterElement({\n                node,\n                stylesheet,\n                useInlineStyles,\n                key: `code-segement${i}`\n            })\n        );\n\n    const createStoryPart = ({\n        rows,\n        stylesheet,\n        useInlineStyles,\n        location,\n        id,\n        refId\n    }: SyntaxHighlighterRendererProps & {\n        location: SourceBlock;\n        id: string;\n        refId?: string;\n    }) => {\n        const first = location.startLoc.line - 1;\n        const last = location.endLoc.line;\n\n        const storyRows = rows.slice(first, last);\n        const storySource = createPart({\n            rows: storyRows,\n            stylesheet,\n            useInlineStyles\n        });\n        const storyKey = `${first}-${last}`;\n\n        if (currentLocation && areLocationsEqual(location, currentLocation)) {\n            return (\n                <SelectedStoryHighlight key={storyKey} ref={selectedStoryRef}>\n                    {storySource}\n                </SelectedStoryHighlight>\n            );\n        }\n        return (\n            <StyledStoryLink\n                to={refId ? `/story/${refId}_${id}` : `/story/${id}`}\n                key={storyKey}\n            >\n                {storySource}\n            </StyledStoryLink>\n        );\n    };\n\n    const createParts = ({\n        rows,\n        stylesheet,\n        useInlineStyles\n    }: SyntaxHighlighterRendererProps) => {\n        const parts = [];\n        let lastRow = 0;\n\n        Object.keys(locationsMap).forEach(key => {\n            const location = locationsMap[key];\n            const first = location.startLoc.line - 1;\n            const last = location.endLoc.line;\n            const { kind, refId } = story;\n            // source loader ids are different from story id\n            const sourceIdParts = key.split(\"--\");\n            const id = api.storyId(\n                kind,\n                sourceIdParts[sourceIdParts.length - 1]\n            );\n            const start = createPart({\n                rows: rows.slice(lastRow, first),\n                stylesheet,\n                useInlineStyles\n            });\n            const storyPart = createStoryPart({\n                rows,\n                stylesheet,\n                useInlineStyles,\n                location,\n                id,\n                refId\n            });\n\n            parts.push(start);\n            parts.push(storyPart);\n\n            lastRow = last;\n        });\n\n        const lastPart = createPart({\n            rows: rows.slice(lastRow),\n            stylesheet,\n            useInlineStyles\n        });\n\n        parts.push(lastPart);\n\n        return parts;\n    };\n\n    const lineRenderer = ({\n        rows,\n        stylesheet,\n        useInlineStyles\n    }: SyntaxHighlighterRendererProps): React.ReactNode => {\n        // because of the usage of lineRenderer, all lines will be wrapped in a span\n        // these spans will receive all classes on them for some reason\n        // which makes colours cascade incorrectly\n        // this removed that list of classnames\n        const myrows = rows.map(({ properties, ...rest }) => ({\n            ...rest,\n            properties: { className: [] }\n        }));\n\n        if (!locationsMap || !Object.keys(locationsMap).length) {\n            return createPart({ rows: myrows, stylesheet, useInlineStyles });\n        }\n\n        const parts = createParts({\n            rows: myrows,\n            stylesheet,\n            useInlineStyles\n        });\n\n        return <span>{parts}</span>;\n    };\n\n    setSource(source);\n\n    return story ? (\n        <StyledSyntaxHighlighter\n            language=\"jsx\"\n            showLineNumbers\n            renderer={lineRenderer}\n            format={false}\n            copyable={false}\n            padded\n        >\n            {source}\n        </StyledSyntaxHighlighter>\n    ) : null;\n};\n"],"file":"StoryPanel.js"}