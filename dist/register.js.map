{"version":3,"sources":["../src/register.js"],"names":["ADDON_ID","PANEL_ID","src","localStorage","getItem","window","location","href","includes","linkedContrast","sendMessage","json","frame","document","getElementById","contentWindow","postMessage","JSON","stringify","sendState","type","data","contrastStorybookState","sendStory","state","story","parameters","name","url","urlPath","codeSnippet","fileName","setStorySource","source","contrastStorySource","setup","bindEvent","element","eventName","eventHandler","addEventListener","attachEvent","e","_","get","parse","Content","border","maxHeight","minHeight","addons","register","api","add","types","PANEL","title","render","active","key"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA,IAAMA,QAAQ,GAAG,cAAjB;AACA,IAAMC,QAAQ,aAAMD,QAAN,WAAd;AAEA,IAAIE,GAAG,GACH,kBAAyB,aAAzB,IACAC,YAAY,CAACC,OAAb,CAAqB,cAArB,MAAyC,aADzC,GAEM,uBAFN,GAGM,2BAJV;;AAMA,IAAID,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAJ,EAA4C;AACxCF,EAAAA,GAAG,GAAG,2BAAN;AACH;;AAED,IACIG,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,QAArB,CAA8B,mBAA9B,kBAEAL,YAAY,CAACC,OAAb,CAAqB,eAArB,CAHJ,EAIE;AACEF,EAAAA,GAAG,GAAGA,GAAG,GAAG,OAAZ;AACH;;AACDG,MAAM,CAACI,cAAP,GAAwB,KAAxB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,IAAI,EAAI;AACxB;AAEA,MAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAd;;AACA,MAAIF,KAAK,IAAIA,KAAK,CAACG,aAAnB,EAAkC;AAC9BH,IAAAA,KAAK,CAACG,aAAN,CAAoBC,WAApB,CAAgCC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAhC,EAAsD,GAAtD;AACH;AACJ,CAPD;;AASA,IAAMQ,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpBT,EAAAA,WAAW,CAAC;AACRU,IAAAA,IAAI,EAAE,iBADE;AAERC,IAAAA,IAAI,EAAEhB,MAAM,CAACiB;AAFL,GAAD,CAAX;AAIH,CALD;;AAOA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,MAAMC,KAAK,GAAGnB,MAAM,CAACiB,sBAArB;AACA,MAAMG,KAAK,GAAGD,KAAK,CAAC,aAAD,CAAL,CAAqBA,KAAK,CAAC,SAAD,CAA1B,CAAd;;AACA,MAAIC,KAAK,IAAIA,KAAK,CAAC,YAAD,CAAlB,EAAkC;AAC9B,QAAMC,UAAU,GAAGD,KAAK,CAAC,YAAD,CAAxB;AACAf,IAAAA,WAAW,CAAC;AACRU,MAAAA,IAAI,EAAE,kBADE;AAERC,MAAAA,IAAI,EAAE;AACFM,QAAAA,IAAI,EAAEF,KAAK,CAAC,MAAD,CADT;AAEFG,QAAAA,GAAG,EAAEvB,MAAM,CAACC,QAAP,CAAgBC,IAFnB;AAGFsB,QAAAA,OAAO,EAAEJ,KAAK,CAAC,MAAD,CAHZ;AAIFK,QAAAA,WAAW,EACPJ,UAAU,CAAC,aAAD,CAAV,IACAA,UAAU,CAAC,aAAD,CAAV,CAA0B,QAA1B,CANF;AAOFK,QAAAA,QAAQ,EAAEL,UAAU,CAAC,UAAD;AAPlB;AAFE,KAAD,CAAX;AAYH;AACJ,CAlBD;;AAoBA,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,MAAM,EAAI;AAC7B5B,EAAAA,MAAM,CAAC6B,mBAAP,GAA6BD,MAA7B;AACAV,EAAAA,SAAS;AACZ,CAHD;;AAKA,IAAMY,KAAK,GAAG,SAARA,KAAQ,GAAM;AAChB,MAAI,CAAC9B,MAAM,CAACI,cAAZ,EAA4B;AAGxB;AAHwB,QAIf2B,SAJe,GAIxB,SAASA,SAAT,CAAmBC,OAAnB,EAA4BC,SAA5B,EAAuCC,YAAvC,EAAqD;AACjD,UAAIF,OAAO,CAACG,gBAAZ,EAA8B;AAC1BH,QAAAA,OAAO,CAACG,gBAAR,CAAyBF,SAAzB,EAAoCC,YAApC,EAAkD,KAAlD;AACH,OAFD,MAEO,IAAIF,OAAO,CAACI,WAAZ,EAAyB;AAC5BJ,QAAAA,OAAO,CAACI,WAAR,CAAoB,OAAOH,SAA3B,EAAsCC,YAAtC;AACH;AACJ,KAVuB,EAYxB;;;AAXAlC,IAAAA,MAAM,CAACI,cAAP,GAAwB,IAAxB;AAYA2B,IAAAA,SAAS,CAAC/B,MAAD,EAAS,SAAT,EAAoB,UAAUqC,CAAV,EAAa;AACtC,UAAIC,mBAAEC,GAAF,CAAMF,CAAN,EAAS,MAAT,CAAJ,EAAsB;AAClB,YAAI;AACA,cAAM/B,IAAI,GAAGM,IAAI,CAAC4B,KAAL,CAAWH,CAAC,CAACrB,IAAb,CAAb;;AAEA,kBAAQV,IAAI,CAACS,IAAb;AACI,iBAAK,WAAL;AACI,qBAAOG,SAAS,EAAhB;;AACJ,iBAAK,WAAL;AACI,qBAAOJ,SAAS,EAAhB;AAJR;AAMH,SATD,CASE,gBAAM,CAAE;AACb;AACJ,KAbQ,CAAT;AAcH;AACJ,CA7BD;;AA+BA,IAAM2B,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClB,sBACI;AACI,IAAA,MAAM,EAAEX,KADZ;AAEI,IAAA,EAAE,EAAC,YAFP;AAGI,IAAA,KAAK,EAAC,MAHV;AAII,IAAA,KAAK,EAAE;AACHY,MAAAA,MAAM,EAAE,MADL;AAEHC,MAAAA,SAAS,EAAE,kBAFR;AAGHC,MAAAA,SAAS,EAAE;AAHR,KAJX;AASI,IAAA,GAAG,EAAE/C;AATT,IADJ;AAaH,CAdD;;AAgBAgD,eAAOC,QAAP,CAAgBnD,QAAhB,EAA0B,UAAAoD,GAAG,EAAI;AAC7BF,iBAAOG,GAAP,CAAWpD,QAAX,EAAqB;AACjBmB,IAAAA,IAAI,EAAEkC,cAAMC,KADK;AAEjBC,IAAAA,KAAK,EAAE,UAFU;AAGjBC,IAAAA,MAAM,EAAE,sBAAqB;AAAA,UAAlBC,MAAkB,QAAlBA,MAAkB;AAAA,UAAVC,GAAU,QAAVA,GAAU;AACzBtD,MAAAA,MAAM,CAACiB,sBAAP,GAAgC,6BAAhC;AACAC,MAAAA,SAAS;AAET,0BACI,gCAAC,sBAAD;AAAY,QAAA,MAAM,EAAEmC,MAApB;AAA4B,QAAA,GAAG,EAAEC;AAAjC,sBACI,gCAAC,OAAD,OADJ,CADJ;AAKH;AAZgB,GAArB;AAcH,CAfD","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport { addons, types } from \"@storybook/addons\";\nimport { AddonPanel } from \"@storybook/components\";\nimport { useStorybookState } from \"@storybook/api\";\n\nconst ADDON_ID = \"contrast-app\";\nconst PANEL_ID = `${ADDON_ID}/panel`;\n\nlet src =\n    process.env.NODE_ENV === \"development\" ||\n    localStorage.getItem(\"contrast-env\") === \"development\"\n        ? \"http://localhost:3000\"\n        : \"https://work.contrast.app\";\n\nif (localStorage.getItem(\"contrast-ngrok\")) {\n    src = \"https://contrast.ngrok.io\";\n}\n\nif (\n    window.location.href.includes(\"demo.contrast.app\") ||\n    process.env.IS_DEMO ||\n    localStorage.getItem(\"contrast-demo\")\n) {\n    src = src + \"/demo\";\n}\nwindow.linkedContrast = false;\n\nconst sendMessage = json => {\n    // Make sure you are sending a string, and to stringify JSON\n\n    const frame = document.getElementById(\"the_iframe\");\n    if (frame && frame.contentWindow) {\n        frame.contentWindow.postMessage(JSON.stringify(json), \"*\");\n    }\n};\n\nconst sendState = () => {\n    sendMessage({\n        type: \"storybook_state\",\n        data: window.contrastStorybookState\n    });\n};\n\nconst sendStory = () => {\n    const state = window.contrastStorybookState;\n    const story = state[\"storiesHash\"][state[\"storyId\"]];\n    if (story && story[\"parameters\"]) {\n        const parameters = story[\"parameters\"];\n        sendMessage({\n            type: \"storybook_source\",\n            data: {\n                name: story[\"name\"],\n                url: window.location.href,\n                urlPath: story[\"path\"],\n                codeSnippet:\n                    parameters[\"storySource\"] &&\n                    parameters[\"storySource\"][\"source\"],\n                fileName: parameters[\"fileName\"]\n            }\n        });\n    }\n};\n\nconst setStorySource = source => {\n    window.contrastStorySource = source;\n    sendStory();\n};\n\nconst setup = () => {\n    if (!window.linkedContrast) {\n        window.linkedContrast = true;\n\n        // addEventListener support for IE8\n        function bindEvent(element, eventName, eventHandler) {\n            if (element.addEventListener) {\n                element.addEventListener(eventName, eventHandler, false);\n            } else if (element.attachEvent) {\n                element.attachEvent(\"on\" + eventName, eventHandler);\n            }\n        }\n\n        // Listen to message from child window\n        bindEvent(window, \"message\", function (e) {\n            if (_.get(e, \"data\")) {\n                try {\n                    const json = JSON.parse(e.data);\n\n                    switch (json.type) {\n                        case \"get_story\":\n                            return sendStory();\n                        case \"get_state\":\n                            return sendState();\n                    }\n                } catch {}\n            }\n        });\n    }\n};\n\nconst Content = () => {\n    return (\n        <iframe\n            onLoad={setup}\n            id=\"the_iframe\"\n            width=\"100%\"\n            style={{\n                border: \"none\",\n                maxHeight: \"calc(100% - 5px)\",\n                minHeight: \"calc(100% - 5px)\"\n            }}\n            src={src}\n        />\n    );\n};\n\naddons.register(ADDON_ID, api => {\n    addons.add(PANEL_ID, {\n        type: types.PANEL,\n        title: \"Contrast\",\n        render: ({ active, key }) => {\n            window.contrastStorybookState = useStorybookState();\n            sendStory();\n\n            return (\n                <AddonPanel active={active} key={key}>\n                    <Content />\n                </AddonPanel>\n            );\n        }\n    });\n});\n"],"file":"register.js"}