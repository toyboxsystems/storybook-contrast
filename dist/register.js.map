{"version":3,"sources":["../src/register.js"],"names":["ADDON_ID","PANEL_ID","SRC","sendMessage","document","getElementById","contentWindow","postMessage","JSON","stringify","json","sendState","type","data","window","contrastStorybookState","setup","console","log","setupContrast","bindEvent","element","eventName","eventHandler","addEventListener","attachEvent","e","origin","parse","Content","state","addons","register","add","types","PANEL","title","render","active","key"],"mappings":";;AAAA;;;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,WAAW,SAAjB;AACA,IAAMC,WAAcD,QAAd,WAAN;;AAEA,IAAME,MAAM,uBAAZ;;AAEA,IAAMC,cAAc,SAAdA,WAAc,OAAQ;AACxB;AACAC,aACKC,cADL,CACoB,YADpB,EAEKC,aAFL,CAEmBC,WAFnB,CAE+BC,KAAKC,SAAL,CAAeC,IAAf,CAF/B,EAEqD,GAFrD;AAGH,CALD;;AAOA,IAAMC,YAAY,SAAZA,SAAY,GAAM;AACpBR,gBAAY;AACRS,cAAM,iBADE;AAERC,cAAMC,OAAOC;AAFL,KAAZ;AAIH,CALD;;AAOA,IAAMC,QAAQ,SAARA,KAAQ,GAAM;AAChBC,YAAQC,GAAR,CAAY,OAAZ;;AAEAJ,WAAOK,aAAP,GAAuB,IAAvB;;AAEA;AACA,aAASC,SAAT,CAAmBC,OAAnB,EAA4BC,SAA5B,EAAuCC,YAAvC,EAAqD;AACjD,YAAIF,QAAQG,gBAAZ,EAA8B;AAC1BH,oBAAQG,gBAAR,CAAyBF,SAAzB,EAAoCC,YAApC,EAAkD,KAAlD;AACH,SAFD,MAEO,IAAIF,QAAQI,WAAZ,EAAyB;AAC5BJ,oBAAQI,WAAR,CAAoB,OAAOH,SAA3B,EAAsCC,YAAtC;AACH;AACJ;;AAED;AACAH,cAAUN,MAAV,EAAkB,SAAlB,EAA6B,UAAUY,CAAV,EAAa;AACtCT,gBAAQC,GAAR,CAAY,YAAZ,EAA0BQ,CAA1B;AACA,YAAIA,EAAEC,MAAF,KAAazB,GAAjB,EAAsB;AAClB,gBAAMQ,OAAOF,KAAKoB,KAAL,CAAWF,EAAEb,IAAb,CAAb;;AAEA,oBAAQH,KAAKE,IAAb;AACI,qBAAK,WAAL;AACI,2BAAOD,WAAP;AAFR;AAIH;AACJ,KAVD;;AAYAA;AACH,CA5BD;;AA8BA,IAAMkB,UAAU,SAAVA,OAAU,GAAM;AAClB,QAAMC,QAAQ,6BAAd;AACAhB,WAAOC,sBAAP,GAAgCe,KAAhC;AACAb,YAAQC,GAAR,CAAY,eAAZ;;AAEA,QAAIJ,OAAOK,aAAX,EAA0B;AACtBR;AACH;;AAED;AACA,WACI;AACI,gBAAQK,KADZ;AAEI,YAAG,YAFP;AAGI,eAAM,MAHV;AAII,gBAAO,MAJX;AAKI,aAAKd;AALT,MADJ;AASH,CAnBD;;AAqBA6B,eAAOC,QAAP,CAAgBhC,QAAhB,EAA0B,eAAO;AAC7B+B,mBAAOE,GAAP,CAAWhC,QAAX,EAAqB;AACjBW,cAAMsB,cAAMC,KADK;AAEjBC,eAAO,UAFU;AAGjBC,gBAAQ,sBAAqB;AAAA,gBAAlBC,MAAkB,QAAlBA,MAAkB;AAAA,gBAAVC,GAAU,QAAVA,GAAU;;AACzB,mBACI;AAAC,sCAAD;AAAA,kBAAY,QAAQD,MAApB,EAA4B,KAAKC,GAAjC;AACI,8CAAC,OAAD;AADJ,aADJ;AAKH;AATgB,KAArB;AAWH,CAZD","file":"register.js","sourcesContent":["import React from \"react\";\nimport { addons, types } from \"@storybook/addons\";\nimport { AddonPanel } from \"@storybook/components\";\nimport { useStorybookState } from \"@storybook/api\";\n\nconst ADDON_ID = \"myaddon\";\nconst PANEL_ID = `${ADDON_ID}/panel`;\n\nconst SRC = \"http://localhost:3000\";\n\nconst sendMessage = json => {\n    // Make sure you are sending a string, and to stringify JSON\n    document\n        .getElementById(\"the_iframe\")\n        .contentWindow.postMessage(JSON.stringify(json), \"*\");\n};\n\nconst sendState = () => {\n    sendMessage({\n        type: \"storybook_state\",\n        data: window.contrastStorybookState\n    });\n};\n\nconst setup = () => {\n    console.log(\"SETUP\");\n\n    window.setupContrast = true;\n\n    // addEventListener support for IE8\n    function bindEvent(element, eventName, eventHandler) {\n        if (element.addEventListener) {\n            element.addEventListener(eventName, eventHandler, false);\n        } else if (element.attachEvent) {\n            element.attachEvent(\"on\" + eventName, eventHandler);\n        }\n    }\n\n    // Listen to message from child window\n    bindEvent(window, \"message\", function (e) {\n        console.log(\"from child\", e);\n        if (e.origin === SRC) {\n            const json = JSON.parse(e.data);\n\n            switch (json.type) {\n                case \"get_state\":\n                    return sendState();\n            }\n        }\n    });\n\n    sendState();\n};\n\nconst Content = () => {\n    const state = useStorybookState();\n    window.contrastStorybookState = state;\n    console.log(\"SETTING STATE\");\n\n    if (window.setupContrast) {\n        sendState();\n    }\n\n    // return null;\n    return (\n        <iframe\n            onLoad={setup}\n            id=\"the_iframe\"\n            width=\"100%\"\n            height=\"100%\"\n            src={SRC}\n        />\n    );\n};\n\naddons.register(ADDON_ID, api => {\n    addons.add(PANEL_ID, {\n        type: types.PANEL,\n        title: \"Contrast\",\n        render: ({ active, key }) => {\n            return (\n                <AddonPanel active={active} key={key}>\n                    <Content />\n                </AddonPanel>\n            );\n        }\n    });\n});\n"]}