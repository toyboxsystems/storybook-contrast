{"version":3,"sources":["../src/register.js"],"names":["ADDON_ID","PANEL_ID","SRC","sendMessage","json","document","getElementById","contentWindow","postMessage","JSON","stringify","sendState","type","data","window","contrastStorybookState","sendStorySource","source","setup","console","log","setupContrast","bindEvent","element","eventName","eventHandler","addEventListener","attachEvent","e","origin","parse","Content","state","addons","register","api","add","types","PANEL","title","render","active","key","display"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { addons, types } from \"@storybook/addons\";\nimport { AddonPanel } from \"@storybook/components\";\nimport { useStorybookState } from \"@storybook/api\";\nimport { StoryPanel } from \"./StoryPanel\";\n\nconst ADDON_ID = \"myaddon\";\nconst PANEL_ID = `${ADDON_ID}/panel`;\n\nconst SRC = \"http://localhost:3000\";\n\nconst sendMessage = json => {\n    // Make sure you are sending a string, and to stringify JSON\n    document\n        .getElementById(\"the_iframe\")\n        .contentWindow.postMessage(JSON.stringify(json), \"*\");\n};\n\nconst sendState = () => {\n    sendMessage({\n        type: \"storybook_state\",\n        data: window.contrastStorybookState\n    });\n};\n\nconst sendStorySource = source => {\n    sendMessage({\n        type: \"storybook_source\",\n        data: source\n    });\n};\n\nconst setup = () => {\n    console.log(\"SETUP\");\n\n    window.setupContrast = true;\n\n    // addEventListener support for IE8\n    function bindEvent(element, eventName, eventHandler) {\n        if (element.addEventListener) {\n            element.addEventListener(eventName, eventHandler, false);\n        } else if (element.attachEvent) {\n            element.attachEvent(\"on\" + eventName, eventHandler);\n        }\n    }\n\n    // Listen to message from child window\n    bindEvent(window, \"message\", function (e) {\n        console.log(\"from child\", e);\n        if (e.origin === SRC) {\n            const json = JSON.parse(e.data);\n\n            switch (json.type) {\n                case \"get_state\":\n                    return sendState();\n            }\n        }\n    });\n\n    sendState();\n};\n\nconst Content = () => {\n    const state = useStorybookState();\n    window.contrastStorybookState = state;\n    console.log(\"SETTING STATE\");\n\n    if (window.setupContrast) {\n        sendState();\n    }\n\n    // return null;\n    return (\n        <iframe\n            onLoad={setup}\n            id=\"the_iframe\"\n            width=\"100%\"\n            height=\"100%\"\n            src={SRC}\n        />\n    );\n};\n\naddons.register(ADDON_ID, api => {\n    addons.add(PANEL_ID, {\n        type: types.PANEL,\n        title: \"Contrast\",\n        render: ({ active, key }) => {\n            console.log(\"heyyyyy\");\n            return (\n                <AddonPanel active={active} key={key}>\n                    <span style={{ display: \"none\" }}>\n                        <StoryPanel\n                            key={key}\n                            api={api}\n                            setSource={sendStorySource}\n                        />\n                    </span>\n                    <Content />\n                </AddonPanel>\n            );\n        }\n    });\n});\n"],"file":"register.js"}